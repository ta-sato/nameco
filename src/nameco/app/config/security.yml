jms_security_extra:
    secure_all_services: false
    expressions: true

security:
    encoders:
        Nameco\UserBundle\Entity\User:
            algorithm: sha512
            iterations: 3
            encode_as_base64: false
#        Nameco\UserBundle\Entity\User:   sha512

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        users:
            entity: { class: NamecoUserBundle:User }
#        main_provider:
#          chain:
#            providers: [user_db, in_memory]
#        in_memory:
#            memory:
#                users:
#                    user:  { password: userpass, roles: [ 'ROLE_USER' ] }
#                    admin: { password: namecoadmin, roles: [ 'ROLE_ADMIN' ] }
#        user_db:
#          entity:  { class: Nameco\UserBundle\Entity\User, property: username }

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/(login$|css|js|images|img)
            security: false

        secured_area:
#            pattern:    ^/demo/secured/
            pattern:    ^/
            form_login:
                check_path: /login_check
                login_path: /login
            logout:
                path:   /logout
                target: /login
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"

    access_control:
        - { path: user/*, roles: ROLE_ADMIN}
        - { path: admin/*, roles: ROLE_ADMIN}
        #- { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }
        #
        # You must uncomment the two following rules to restrict access to paths
        # starting with the /_internal prefix to only localhost
        #- { path: ^/_internal/secure, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1 }
        #- { path: ^/_internal/secure, roles: ROLE_NO_ACCESS }
